version: "3.4"

services:
  web:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 7800:7800
    depends_on:
      - ui
      - api
      - sse
    command: [nginx-debug, '-g', 'daemon off;']

  ui:
    build: ui
    image: ui
    restart: "no"
    volumes:
      - ./ui/:/app
    ports:
      - 7778:7778
    depends_on:
      - api
    env_file:
      - project.env

  mq:
    image: rabbitmq:3-management
    restart: "no"
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - project.env

  sse:
    build: service
    image: sse
    restart: "no"
    volumes:
      - ./service/:/app
    ports:
      - 7776:7776
    depends_on:
      - database
      - flyway
      - mq
    command: ["/wait-for-it.sh", "mq:5672", "--", "deno", "run", "--watch", "--allow-net", "--allow-read", "--allow-run", "--allow-env", "--allow-write", "--no-check", "app.js" ]
    env_file:
      - project.env

  api:
    build: api
    image: api
    restart: "no"
    volumes:
      - ./api/:/app
    ports:
      - 7777:7777
    depends_on:
      - database
      - flyway
      - mq
      - sse
    command: [ "/wait-for-it.sh", "mq:5672", "--", "deno", "run", "--watch", "--allow-net", "--allow-read", "--allow-run", "--allow-env", "--allow-write", "--no-check", "app.js" ]
    env_file:
      - project.env

  database:
    container_name: dab-p3-database-5f31bd29-7026-4af6-a49a-1f51a612da11
    image: postgres:14.1
    restart: "no"
    env_file:
      - project.env

  flyway:
    image: flyway/flyway:8.4.0-alpine
    depends_on:
      - database
    volumes:
      - .:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate
    env_file:
      - project.env

  k6:
    entrypoint: "/bin/true" # Prevent startup on docker-compose up
    build: ./k6
    image: k6
    network_mode: host
    depends_on:
      - ui
      - api
      - web
    volumes:
      - ./k6/:/k6/
